{"version":3,"sources":["index.js"],"names":["AWS","require","bucket","photo","config","Config","accessKeyId","process","env","aws_access_key_id","secretAccessKey","aws_secret_access_key","update","region","client","Rekognition","params","Image","S3Object","Bucket","Name","detectText","err","response","console","log","stack","fraseCompleta","TextDetections","forEach","label","Type","push","DetectedText","module","exports","handler","event","statusCode","body","JSON","stringify","message","input"],"mappings":";;AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAjB;;AAEA,IAAMC,MAAM,GAAG,uDAAf;AACA,IAAMC,KAAK,GAAG,WAAd;AAEA,IAAMC,MAAM,GAAG,IAAIJ,GAAG,CAACK,MAAR,CAAe;AAC5BC,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADG;AAE5BC,EAAAA,eAAe,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFD,CAAf,CAAf;AAKAX,GAAG,CAACI,MAAJ,CAAWQ,MAAX,CAAkB;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAlB;AACA,IAAMC,MAAM,GAAG,IAAId,GAAG,CAACe,WAAR,EAAf;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAC;AACPC,MAAAA,MAAM,EAAEjB,MADD;AAEPkB,MAAAA,IAAI,EAAEjB;AAFC;AADJ;AADM,CAAf;AASAW,MAAM,CAACO,UAAP,CAAkBL,MAAlB,EAA0B,UAASM,GAAT,EAAcC,QAAd,EAAuB;AAC/C,MAAGD,GAAH,EAAO;AACLE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiBA,GAAG,CAACI,KAArB;AACD,GAFD,MAGK;AAEH,QAAIC,aAAa,GAAG,EAApB;AACAH,IAAAA,OAAO,CAACC,GAAR,6BAAiCtB,KAAjC;AACAoB,IAAAA,QAAQ,CAACK,cAAT,CAAwBC,OAAxB,CAAgC,UAAAC,KAAK,EAAI;AAEvC,UAAGA,KAAK,CAACC,IAAN,IAAc,MAAjB,EACA;AACEJ,QAAAA,aAAa,CAACK,IAAd,CAAmBF,KAAK,CAACG,YAAzB;AACD;AACD;;;;;;;;AASD,KAfD;AAiBAT,IAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ;AACD;AACF,CA3BD;;AA6BAO,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,2CAChB;AACLC,YAAAA,UAAU,EAAE,GADP;AAELC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJ;AACEC,cAAAA,OAAO,EAAE,0DADX;AAEEC,cAAAA,KAAK,EAAEN;AAFT,aADI,EAKJ,IALI,EAMJ,CANI;AAFD,WADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["var AWS = require('aws-sdk');\n\nconst bucket = 'textimage-dev-serverlessdeploymentbucket-ctdtggba9qmz'\nconst photo = 'frase.jpg'\n\nconst config = new AWS.Config({\n  accessKeyId: process.env.aws_access_key_id,\n  secretAccessKey: process.env.aws_secret_access_key\n})\n\nAWS.config.update({region: 'us-east-1'});\nconst client = new AWS.Rekognition();\n\nconst params = {\n  Image: {\n    S3Object:{\n      Bucket: bucket,\n      Name: photo\n    },\n  },\n}\n\nclient.detectText(params, function(err, response){\n  if(err){\n    console.log(err, err.stack);\n  }\n  else {\n     \n    var fraseCompleta = []; \n    console.log(`Detected Text for ${photo}`);\n    response.TextDetections.forEach(label => {\n\n      if(label.Type == 'LINE')\n      {\n        fraseCompleta.push(label.DetectedText);\n      }\n      /*console.log(`Detected Text: ${label.DetectedText}`);\n      console.log(`Type: ${label.Type}`);\n      console.log(`ID: ${label.Id}`);\n      console.log(`Parent ID: ${label.ParentId}`);\n      console.log(`Confidence: ${label.Confidence}`);\n      console.log(`Plygon: `);\n      console.log(label.Geometry.Polygon);*/\n\n      \n    })\n\n    console.log(fraseCompleta);\n  }\n});\n\nmodule.exports.handler = async (event) => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify(\n      {\n        message: \"Go Serverless v3.0! Your function executed successfully!\",\n        input: event,\n      },\n      null,\n      2\n    ),\n  };\n};\n"],"file":"index.dev.js"}